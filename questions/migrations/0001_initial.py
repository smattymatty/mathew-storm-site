# Generated by Django 5.2.1 on 2025-05-28 09:07

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='TutorialTitle',
            fields=[
                ('title_id_slug', models.SlugField(help_text="The unique slug for the tutorial title (e.g., '01-first-contribution'). Corresponds to 'title-id' in the JSON.", max_length=100, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text="A human-readable name for the tutorial (e.g., 'Your First Contribution'). Optional.", max_length=255)),
            ],
            options={
                'verbose_name': 'Tutorial Title',
                'verbose_name_plural': 'Tutorial Titles',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id_slug', models.SlugField(help_text="A unique semantic slug for this question within its tutorial (e.g., 'git-basics-commit-definition').", max_length=255)),
                ('question_text', models.TextField(help_text='The main text of the question.')),
                ('answer_a', models.CharField(help_text='Text for answer option A.', max_length=500)),
                ('answer_b', models.CharField(help_text='Text for answer option B.', max_length=500)),
                ('answer_c', models.CharField(help_text='Text for answer option C.', max_length=500)),
                ('answer_d', models.CharField(help_text='Text for answer option D.', max_length=500)),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], help_text='The letter (a, b, c, or d) corresponding to the correct answer.', max_length=1)),
                ('difficulty', models.CharField(choices=[('foundational', 'Foundational'), ('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('impossible', 'Impossible')], default='easy', help_text='The difficulty level of the question.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags. (Handled by django-taggit)', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('tutorial_title', models.ForeignKey(help_text='The tutorial this question belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='questions.tutorialtitle')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['tutorial_title', 'question_id_slug'],
                'unique_together': {('tutorial_title', 'question_id_slug')},
            },
        ),
    ]
