[
  {
    "question-id": "foundational-comments-purpose",
    "question": "What is the primary purpose of adding comments (lines starting with `//`) to a C program?",
    "answer_a": "To tell the computer to perform specific high-priority actions.",
    "answer_b": "To document the program and improve its readability for humans, as they are ignored by the compiler.",
    "answer_c": "To include special libraries required for the program to run.",
    "answer_d": "To mark sections of code that should be executed twice.",
    "correct_answer": "b",
    "difficulty": "foundational",
    "tags": ["c-programming", "programming-basics", "introduction"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "foundational-variable-definition",
    "question": "In programming, what is a 'variable'?",
    "answer_a": "A fixed value that can never be changed, like the number 7.",
    "answer_b": "A command that prints text to the screen.",
    "answer_c": "A named location in the computer's memory where a program can store a value for later use.",
    "answer_d": "An error in the program that causes it to crash.",
    "correct_answer": "c",
    "difficulty": "foundational",
    "tags": ["c-programming", "programming-basics", "variables"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "foundational-if-statement-purpose",
    "question": "What is the fundamental role of an `if` statement in C programming?",
    "answer_a": "To repeat a block of code a specific number of times.",
    "answer_b": "To define a new variable for storing data.",
    "answer_c": "To allow the program to make a decision and execute code only if a certain condition is true.",
    "answer_d": "To stop the program's execution immediately.",
    "correct_answer": "c",
    "difficulty": "foundational",
    "tags": ["c-programming", "programming-basics", "decision-making"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "easy-include-stdio",
    "question": "What is the effect of the preprocessor directive `#include <stdio.h>`?",
    "answer_a": "It prints the words 'stdio.h' to the screen.",
    "answer_b": "It includes information from the standard input/output header file, which is needed to use functions like `printf` and `scanf` correctly.",
    "answer_c": "It checks the entire program for spelling errors.",
    "answer_d": "It defines the `main` function for the program.",
    "correct_answer": "b",
    "difficulty": "easy",
    "tags": ["c-programming", "stdio", "programming-basics"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "easy-printf-variable",
    "question": "Given an integer variable `sum` with a value of 117, which `printf` statement would correctly display 'Sum is 117' followed by a newline?",
    "answer_a": "printf(\"Sum is sum\\n\");",
    "answer_b": "printf(\"Sum is %d\\n\", sum);",
    "answer_c": "printf(\"Sum is %d\\n\");",
    "answer_d": "printf(sum);",
    "correct_answer": "b",
    "difficulty": "easy",
    "tags": ["c-programming", "stdio", "variables"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "easy-equality-operator",
    "question": "Which operator is used to test if two numbers are equal in an `if` statement's condition?",
    "answer_a": "=",
    "answer_b": "==",
    "answer_c": "!=",
    "answer_d": "><",
    "correct_answer": "b",
    "difficulty": "easy",
    "tags": ["c-programming", "operators", "decision-making"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "medium-scanf-address-operator",
    "question": "In the statement `scanf(\"%d\", &integer1);`, what is the purpose of the ampersand (`&`)?",
    "answer_a": "It indicates that the number being read should be treated as a string.",
    "answer_b": "It is a comment and is ignored by the compiler.",
    "answer_c": "It tells `scanf` the memory address of the `integer1` variable, so it knows where to store the user's input.",
    "answer_d": "It multiplies the input value by the variable's current value.",
    "correct_answer": "c",
    "difficulty": "medium",
    "tags": ["c-programming", "stdio", "variables", "operators"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "medium-integer-division",
    "question": "What is the result of the expression `17 / 5` in C, and why?",
    "answer_a": "3.4, because it performs standard decimal division.",
    "answer_b": "2, because it calculates the remainder of the division.",
    "answer_c": "3, because integer division discards any fractional part of the result.",
    "answer_d": "An error, because you cannot divide these two integers.",
    "correct_answer": "c",
    "difficulty": "medium",
    "tags": ["c-programming", "operators", "programming-basics"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "medium-destructive-vs-nondestructive",
    "question": "According to the Memory Concepts section, which pair of operations is an example of a destructive write and a nondestructive read?",
    "answer_a": "Destructive: `sum = integer1 + integer2;`, Nondestructive: `printf(\"%d\", integer1);`",
    "answer_b": "Destructive: `printf(\"%d\", integer1);`, Nondestructive: `scanf(\"%d\", &integer1);`",
    "answer_c": "Both `scanf(\"%d\", &integer1);` and `sum = integer1 + integer2;` are nondestructive.",
    "answer_d": "Both `printf(\"%d\", integer1);` and `sum = integer1 + integer2;` are destructive.",
    "correct_answer": "a",
    "difficulty": "medium",
    "tags": ["c-programming", "variables", "programming-basics"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "hard-operator-precedence",
    "question": "Given the C arithmetic expression `x = 7 + 3 * 6 / 2 - 1;`, what value will be assigned to `x` according to the rules of operator precedence?",
    "answer_a": "29",
    "answer_b": "15",
    "answer_c": "10",
    "answer_d": "9",
    "correct_answer": "b",
    "difficulty": "hard",
    "tags": ["c-programming", "operators", "programming-basics"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "hard-scanf-multiple-inputs",
    "question": "When the statement `scanf(\"%d %d\", &number1, &number2);` is executed, how does the program expect the user to enter the two integers?",
    "answer_a": "The two numbers must be separated by a comma.",
    "answer_b": "The two numbers must be entered on two separate lines.",
    "answer_c": "The two numbers can be separated by any whitespace character, such as a space, tab, or newline.",
    "answer_d": "The two numbers must be entered with no space between them.",
    "correct_answer": "c",
    "difficulty": "hard",
    "tags": ["c-programming", "stdio", "programming-basics"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "hard-compiler-vs-linker-error",
    "question": "If a programmer accidentally misspells `printf` as `printff` in their code, which phase of the development cycle will most likely report the error?",
    "answer_a": "The preprocessor, because it cannot find the function definition.",
    "answer_b": "The compiler, because it is a syntax error.",
    "answer_c": "The linker, because it cannot find the function's definition in any library.",
    "answer_d": "The loader, because the function is missing from the executable image.",
    "correct_answer": "c",
    "difficulty": "hard",
    "tags": ["c-programming", "compiler", "linker", "development-cycle"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "impossible-printf-return-value",
    "question": "While the tutorial explains what `printf` does, it doesn't mention its return value. In C, what does the `printf` function return upon successful execution?",
    "answer_a": "It always returns 0.",
    "answer_b": "It returns the memory address of the string that was printed.",
    "answer_c": "It returns the total number of characters successfully written to the output.",
    "answer_d": "It returns a boolean value: `1` for success and `0` for failure.",
    "correct_answer": "c",
    "difficulty": "impossible",
    "tags": ["c-programming", "stdio", "functions"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "impossible-format-string-vulnerability-name",
    "question": "The 'Secure C Programming' section warns against using `printf(myString);`. What is the well-known class of security vulnerability that this coding mistake can create?",
    "answer_a": "A buffer overflow.",
    "answer_b": "A memory leak.",
    "answer_c": "A race condition.",
    "answer_d": "A format string bug.",
    "correct_answer": "d",
    "difficulty": "impossible",
    "tags": ["c-programming", "security", "stdio"],
    "title-id": "02-c-programming"
  },
  {
    "question-id": "impossible-main-void-parameter",
    "question": "The tutorial defines the main function as `int main(void)`. In the C standard, what is the technical difference between defining `main` with `(void)` versus empty parentheses `()`?",
    "answer_a": "There is no difference; they are syntactically identical.",
    "answer_b": "`int main(void)` declares a function that takes exactly zero arguments, whereas `int main()` declares a function that takes an unspecified number of arguments.",
    "answer_c": "`int main()` is the modern standard, while `int main(void)` is an obsolete syntax that is no longer supported.",
    "answer_d": "`int main(void)` indicates the function will return a pointer, while `int main()` indicates it will return an integer.",
    "correct_answer": "b",
    "difficulty": "impossible",
    "tags": ["c-programming", "functions", "c-language"],
    "title-id": "02-c-programming"
  }
]
