[
  {
    "question-id": "foundational-computer-program-definition",
    "question": "What is a 'computer program'?",
    "answer_a": "The physical components of a computer, such as the CPU and memory.",
    "answer_b": "A sequence of instructions that guides a computer through ordered actions.",
    "answer_c": "A collection of data stored in a database.",
    "answer_d": "The visual interface that a user interacts with on a screen.",
    "correct_answer": "b",
    "difficulty": "foundational",
    "tags": ["c-programming", "c-language", "foundational"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "foundational-hardware-definition",
    "question": "Which of the following best defines computer 'hardware'?",
    "answer_a": "The set of instructions, or code, that you write to perform tasks.",
    "answer_b": "The operating system that manages computer resources.",
    "answer_c": "The physical devices of a computer system, such as the keyboard, CPU, and screen.",
    "answer_d": "The data that is processed by the computer.",
    "correct_answer": "c",
    "difficulty": "foundational",
    "tags": ["operating-systems", "hardware", "foundational"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "foundational-operating-system-purpose",
    "question": "What is the general purpose of an operating system like Linux or Windows?",
    "answer_a": "To provide a way for programmers to write code in a high-level language.",
    "answer_b": "To make using computers more convenient by providing services that allow applications to run safely and efficiently.",
    "answer_c": "To convert assembly language into machine language.",
    "answer_d": "To store long-term data and programs even when the computer's power is off.",
    "correct_answer": "b",
    "difficulty": "foundational",
    "tags": ["operating-systems", "software", "foundational"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "easy-computer-logical-units",
    "question": "According to the text, which of the following are all considered primary logical units of a computer?",
    "answer_a": "Input Unit, Output Unit, and Hard Drive",
    "answer_b": "CPU, ALU, and Internet Browser",
    "answer_c": "Memory Unit, Central Processing Unit (CPU), and Input Unit",
    "answer_d": "Operating System, Keyboard, and Screen",
    "correct_answer": "c",
    "difficulty": "easy",
    "tags": ["c-programming", "operating-systems", "hardware"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "easy-high-level-language-advantage",
    "question": "What is the main advantage of using a high-level language like C over an assembly language?",
    "answer_a": "High-level languages can be directly understood by computer hardware without any translation.",
    "answer_b": "They allow programmers to write single statements that accomplish substantial tasks, speeding up development.",
    "answer_c": "They run faster because they do not need to be compiled.",
    "answer_d": "They consist only of 1s and 0s, which is easier for programmers to read.",
    "correct_answer": "b",
    "difficulty": "easy",
    "tags": ["c-programming", "c-language", "compiler"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "easy-compiler-definition",
    "question": "What is the primary function of a compiler?",
    "answer_a": "To execute high-level language programs line by line without creating a machine language version.",
    "answer_b": "To bundle all project files into a single file for easy sharing.",
    "answer_c": "To translate a program written in a high-level language into machine language.",
    "answer_d": "To check for logical errors like division-by-zero while a program is running.",
    "correct_answer": "c",
    "difficulty": "easy",
    "tags": ["c-programming", "c-language", "compiler", "development-cycle"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "medium-data-hierarchy-order",
    "question": "Which option correctly shows a part of the data hierarchy, ordered from smallest component to largest?",
    "answer_a": "File -> Record -> Field",
    "answer_b": "Character -> Bit -> Field",
    "answer_c": "Database -> File -> Record",
    "answer_d": "Bit -> Character -> Field -> Record",
    "correct_answer": "d",
    "difficulty": "medium",
    "tags": ["c-programming", "data-structures", "foundational"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "medium-memory-vs-secondary-storage",
    "question": "What is the key difference between the Memory Unit (Primary Memory/RAM) and the Secondary Storage Unit?",
    "answer_a": "Primary memory is persistent and keeps data when power is off, while secondary storage is volatile.",
    "answer_b": "Primary memory is low-capacity and volatile, while secondary storage is high-capacity and persistent.",
    "answer_c": "Primary memory is used for long-term warehousing, while secondary storage provides rapid access for processing.",
    "answer_d": "There is no significant difference; they are two names for the same computer unit.",
    "correct_answer": "b",
    "difficulty": "medium",
    "tags": ["operating-systems", "hardware", "memory"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "medium-linker-role",
    "question": "In the C program development cycle, what is the main purpose of the 'linker'?",
    "answer_a": "It translates the C source code into machine-language object code.",
    "answer_b": "It connects the program's object code with the code for missing functions from libraries to create a complete executable image.",
    "answer_c": "It loads the executable program from the disk into memory before execution.",
    "answer_d": "It checks the source code for syntax errors and violations of language rules.",
    "correct_answer": "b",
    "difficulty": "medium",
    "tags": [
      "c-programming",
      "c-language",
      "development-cycle",
      "compiler",
      "linker"
    ],
    "title-id": "01-introduction"
  },
  {
    "question-id": "hard-syntax-vs-runtime-error",
    "question": "Based on the descriptions, how would you differentiate between a syntax error and a runtime error?",
    "answer_a": "A syntax error is found by the programmer during editing, while a runtime error is found by the linker during linking.",
    "answer_b": "A syntax error is a non-fatal error that produces incorrect results, while a runtime error is always a fatal error.",
    "answer_c": "A syntax error is detected by the compiler before the program runs, while a runtime error (like division-by-zero) occurs during the program's execution.",
    "answer_d": "A syntax error relates to improper use of the C Standard Library, while a runtime error relates to improper use of the C language itself.",
    "correct_answer": "c",
    "difficulty": "hard",
    "tags": ["c-programming", "development-cycle", "debugging", "compiler"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "hard-c-language-evolution",
    "question": "The C language was not created in isolation. According to the text, from which two predecessor languages did it directly evolve?",
    "answer_a": "Java and Python",
    "answer_b": "Assembly Language and Machine Language",
    "answer_c": "BCPL and B",
    "answer_d": "HTML and TCP/IP",
    "correct_answer": "c",
    "difficulty": "hard",
    "tags": ["c-programming", "c-language", "history"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "hard-stdout-vs-stderr",
    "question": "What is a key reason for having separate streams for standard output (stdout) and standard error (stderr)?",
    "answer_a": "To ensure that regular program output and error messages are always displayed in different colors on the screen.",
    "answer_b": "So that regular output can be redirected to a file, while still allowing error messages to be displayed on the screen for immediate attention.",
    "answer_c": "Because `stdout` can only handle text data, while `stderr` is designed to handle multimedia output like audio and video.",
    "answer_d": "`stdout` is used for input from the keyboard, while `stderr` is used for output to the screen.",
    "correct_answer": "b",
    "difficulty": "hard",
    "tags": ["c-programming", "operating-systems", "cli", "debugging"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "impossible-json-structure",
    "question": "The text suggests that data from a mobile app like Waze is typically transmitted in JSON format. Which of the following describes the fundamental structure of valid JSON data?",
    "answer_a": "Data is organized in a strict grid of rows and columns, similar to a spreadsheet.",
    "answer_b": "Data consists of nested tags with opening and closing brackets, like in HTML.",
    "answer_c": "Data is represented as a collection of key/value pairs, where keys are strings and values can be strings, numbers, booleans, arrays, or other objects.",
    "answer_d": "Data is written as a sequence of function calls and variable declarations.",
    "correct_answer": "c",
    "difficulty": "impossible",
    "tags": ["web-development", "data-structures", "json"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "impossible-graph-database-model",
    "question": "Waze likely uses a graph database for routing. What are the core components that define the data model of a graph database?",
    "answer_a": "Tables, which contain rows and columns.",
    "answer_b": "Documents, which contain field and value pairs in a hierarchical structure.",
    "answer_c": "Nodes (entities), Relationships (connections), and Properties (attributes).",
    "answer_d": "A single, large text file where data is appended sequentially.",
    "correct_answer": "c",
    "difficulty": "impossible",
    "tags": ["data-structures", "databases"],
    "title-id": "01-introduction"
  },
  {
    "question-id": "impossible-c99-standard-feature",
    "question": "The text mentions the standardization of C (ANSI/ISO). One major update, C99, introduced features to make the language more modern. Which feature was a notable addition in the C99 standard?",
    "answer_a": "The introduction of the `printf` function for formatted output.",
    "answer_b": "The ability to declare variables anywhere within a block, not just at the beginning.",
    "answer_c": "The creation of the `struct` keyword for grouping related data.",
    "answer_d": "The fundamental ability to use functions to organize code.",
    "correct_answer": "b",
    "difficulty": "impossible",
    "tags": ["c-programming", "c-language", "history", "compiler"],
    "title-id": "01-introduction"
  }
]
